// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost-community/mattermost-plugin-google-drive/server/plugin/google (interfaces: DriveActivityInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	driveactivity "google.golang.org/api/driveactivity/v2"
)

// MockDriveActivityInterface is a mock of DriveActivityInterface interface.
type MockDriveActivityInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDriveActivityInterfaceMockRecorder
}

// MockDriveActivityInterfaceMockRecorder is the mock recorder for MockDriveActivityInterface.
type MockDriveActivityInterfaceMockRecorder struct {
	mock *MockDriveActivityInterface
}

// NewMockDriveActivityInterface creates a new mock instance.
func NewMockDriveActivityInterface(ctrl *gomock.Controller) *MockDriveActivityInterface {
	mock := &MockDriveActivityInterface{ctrl: ctrl}
	mock.recorder = &MockDriveActivityInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDriveActivityInterface) EXPECT() *MockDriveActivityInterfaceMockRecorder {
	return m.recorder
}

// Query mocks base method.
func (m *MockDriveActivityInterface) Query(arg0 context.Context, arg1 *driveactivity.QueryDriveActivityRequest) (*driveactivity.QueryDriveActivityResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Query", arg0, arg1)
	ret0, _ := ret[0].(*driveactivity.QueryDriveActivityResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Query indicates an expected call of Query.
func (mr *MockDriveActivityInterfaceMockRecorder) Query(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*MockDriveActivityInterface)(nil).Query), arg0, arg1)
}
