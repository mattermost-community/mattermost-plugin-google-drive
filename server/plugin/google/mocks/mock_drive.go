// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost-community/mattermost-plugin-google-drive/server/plugin/google (interfaces: DriveInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	drive "google.golang.org/api/drive/v3"
	googleapi "google.golang.org/api/googleapi"
)

// MockDriveInterface is a mock of DriveInterface interface.
type MockDriveInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDriveInterfaceMockRecorder
}

// MockDriveInterfaceMockRecorder is the mock recorder for MockDriveInterface.
type MockDriveInterfaceMockRecorder struct {
	mock *MockDriveInterface
}

// NewMockDriveInterface creates a new mock instance.
func NewMockDriveInterface(ctrl *gomock.Controller) *MockDriveInterface {
	mock := &MockDriveInterface{ctrl: ctrl}
	mock.recorder = &MockDriveInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDriveInterface) EXPECT() *MockDriveInterfaceMockRecorder {
	return m.recorder
}

// About mocks base method.
func (m *MockDriveInterface) About(arg0 context.Context, arg1 googleapi.Field) (*drive.About, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "About", arg0, arg1)
	ret0, _ := ret[0].(*drive.About)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// About indicates an expected call of About.
func (mr *MockDriveInterfaceMockRecorder) About(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "About", reflect.TypeOf((*MockDriveInterface)(nil).About), arg0, arg1)
}

// ChangesList mocks base method.
func (m *MockDriveInterface) ChangesList(arg0 context.Context, arg1 string) (*drive.ChangeList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangesList", arg0, arg1)
	ret0, _ := ret[0].(*drive.ChangeList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangesList indicates an expected call of ChangesList.
func (mr *MockDriveInterfaceMockRecorder) ChangesList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangesList", reflect.TypeOf((*MockDriveInterface)(nil).ChangesList), arg0, arg1)
}

// CreateFile mocks base method.
func (m *MockDriveInterface) CreateFile(arg0 context.Context, arg1 *drive.File, arg2 []byte) (*drive.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile", arg0, arg1, arg2)
	ret0, _ := ret[0].(*drive.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFile indicates an expected call of CreateFile.
func (mr *MockDriveInterfaceMockRecorder) CreateFile(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockDriveInterface)(nil).CreateFile), arg0, arg1, arg2)
}

// CreatePermission mocks base method.
func (m *MockDriveInterface) CreatePermission(arg0 context.Context, arg1 string, arg2 *drive.Permission) (*drive.Permission, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePermission", arg0, arg1, arg2)
	ret0, _ := ret[0].(*drive.Permission)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePermission indicates an expected call of CreatePermission.
func (mr *MockDriveInterfaceMockRecorder) CreatePermission(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePermission", reflect.TypeOf((*MockDriveInterface)(nil).CreatePermission), arg0, arg1, arg2)
}

// CreateReply mocks base method.
func (m *MockDriveInterface) CreateReply(arg0 context.Context, arg1, arg2 string, arg3 *drive.Reply) (*drive.Reply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReply", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*drive.Reply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReply indicates an expected call of CreateReply.
func (mr *MockDriveInterfaceMockRecorder) CreateReply(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReply", reflect.TypeOf((*MockDriveInterface)(nil).CreateReply), arg0, arg1, arg2, arg3)
}

// GetComments mocks base method.
func (m *MockDriveInterface) GetComments(arg0 context.Context, arg1, arg2 string) (*drive.Comment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComments", arg0, arg1, arg2)
	ret0, _ := ret[0].(*drive.Comment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetComments indicates an expected call of GetComments.
func (mr *MockDriveInterfaceMockRecorder) GetComments(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComments", reflect.TypeOf((*MockDriveInterface)(nil).GetComments), arg0, arg1, arg2)
}

// GetFile mocks base method.
func (m *MockDriveInterface) GetFile(arg0 context.Context, arg1 string) (*drive.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", arg0, arg1)
	ret0, _ := ret[0].(*drive.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile.
func (mr *MockDriveInterfaceMockRecorder) GetFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockDriveInterface)(nil).GetFile), arg0, arg1)
}

// GetStartPageToken mocks base method.
func (m *MockDriveInterface) GetStartPageToken(arg0 context.Context) (*drive.StartPageToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStartPageToken", arg0)
	ret0, _ := ret[0].(*drive.StartPageToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStartPageToken indicates an expected call of GetStartPageToken.
func (mr *MockDriveInterfaceMockRecorder) GetStartPageToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStartPageToken", reflect.TypeOf((*MockDriveInterface)(nil).GetStartPageToken), arg0)
}

// StopChannel mocks base method.
func (m *MockDriveInterface) StopChannel(arg0 context.Context, arg1 *drive.Channel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StopChannel", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StopChannel indicates an expected call of StopChannel.
func (mr *MockDriveInterfaceMockRecorder) StopChannel(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopChannel", reflect.TypeOf((*MockDriveInterface)(nil).StopChannel), arg0, arg1)
}

// WatchChannel mocks base method.
func (m *MockDriveInterface) WatchChannel(arg0 context.Context, arg1 *drive.StartPageToken, arg2 *drive.Channel) (*drive.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchChannel", arg0, arg1, arg2)
	ret0, _ := ret[0].(*drive.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WatchChannel indicates an expected call of WatchChannel.
func (mr *MockDriveInterfaceMockRecorder) WatchChannel(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchChannel", reflect.TypeOf((*MockDriveInterface)(nil).WatchChannel), arg0, arg1, arg2)
}
