// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost-community/mattermost-plugin-google-drive/server/plugin/google (interfaces: ClientInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	google "github.com/mattermost-community/mattermost-plugin-google-drive/server/plugin/google"
	oauth2 "github.com/mattermost-community/mattermost-plugin-google-drive/server/plugin/oauth2"
	oauth20 "golang.org/x/oauth2"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// GetGoogleUserToken mocks base method.
func (m *MockClientInterface) GetGoogleUserToken(arg0 string) (*oauth20.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGoogleUserToken", arg0)
	ret0, _ := ret[0].(*oauth20.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGoogleUserToken indicates an expected call of GetGoogleUserToken.
func (mr *MockClientInterfaceMockRecorder) GetGoogleUserToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGoogleUserToken", reflect.TypeOf((*MockClientInterface)(nil).GetGoogleUserToken), arg0)
}

// NewDocsService mocks base method.
func (m *MockClientInterface) NewDocsService(arg0 context.Context, arg1 string) (google.DocsInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDocsService", arg0, arg1)
	ret0, _ := ret[0].(google.DocsInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewDocsService indicates an expected call of NewDocsService.
func (mr *MockClientInterfaceMockRecorder) NewDocsService(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDocsService", reflect.TypeOf((*MockClientInterface)(nil).NewDocsService), arg0, arg1)
}

// NewDriveActivityService mocks base method.
func (m *MockClientInterface) NewDriveActivityService(arg0 context.Context, arg1 string) (google.DriveActivityInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDriveActivityService", arg0, arg1)
	ret0, _ := ret[0].(google.DriveActivityInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewDriveActivityService indicates an expected call of NewDriveActivityService.
func (mr *MockClientInterfaceMockRecorder) NewDriveActivityService(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDriveActivityService", reflect.TypeOf((*MockClientInterface)(nil).NewDriveActivityService), arg0, arg1)
}

// NewDriveService mocks base method.
func (m *MockClientInterface) NewDriveService(arg0 context.Context, arg1 string) (google.DriveInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDriveService", arg0, arg1)
	ret0, _ := ret[0].(google.DriveInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewDriveService indicates an expected call of NewDriveService.
func (mr *MockClientInterfaceMockRecorder) NewDriveService(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDriveService", reflect.TypeOf((*MockClientInterface)(nil).NewDriveService), arg0, arg1)
}

// NewDriveV2Service mocks base method.
func (m *MockClientInterface) NewDriveV2Service(arg0 context.Context, arg1 string) (google.DriveV2Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDriveV2Service", arg0, arg1)
	ret0, _ := ret[0].(google.DriveV2Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewDriveV2Service indicates an expected call of NewDriveV2Service.
func (mr *MockClientInterfaceMockRecorder) NewDriveV2Service(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDriveV2Service", reflect.TypeOf((*MockClientInterface)(nil).NewDriveV2Service), arg0, arg1)
}

// NewSheetsService mocks base method.
func (m *MockClientInterface) NewSheetsService(arg0 context.Context, arg1 string) (google.SheetsInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewSheetsService", arg0, arg1)
	ret0, _ := ret[0].(google.SheetsInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewSheetsService indicates an expected call of NewSheetsService.
func (mr *MockClientInterfaceMockRecorder) NewSheetsService(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewSheetsService", reflect.TypeOf((*MockClientInterface)(nil).NewSheetsService), arg0, arg1)
}

// NewSlidesService mocks base method.
func (m *MockClientInterface) NewSlidesService(arg0 context.Context, arg1 string) (google.SlidesInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewSlidesService", arg0, arg1)
	ret0, _ := ret[0].(google.SlidesInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewSlidesService indicates an expected call of NewSlidesService.
func (mr *MockClientInterfaceMockRecorder) NewSlidesService(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewSlidesService", reflect.TypeOf((*MockClientInterface)(nil).NewSlidesService), arg0, arg1)
}

// ReloadConfigs mocks base method.
func (m *MockClientInterface) ReloadConfigs(arg0, arg1 int, arg2 oauth2.Config) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReloadConfigs", arg0, arg1, arg2)
}

// ReloadConfigs indicates an expected call of ReloadConfigs.
func (mr *MockClientInterfaceMockRecorder) ReloadConfigs(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReloadConfigs", reflect.TypeOf((*MockClientInterface)(nil).ReloadConfigs), arg0, arg1, arg2)
}
